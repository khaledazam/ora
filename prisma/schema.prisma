// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String @id @default(cuid())
  clerkId   String? @unique
  email     String @unique
  firstName String
  lastName  String
  phone     String?
  password  String
  gender    Gender
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  appointments Appointment[]
  @@map("users")
}

model Doctor {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  phone       String?
  specialty   String
  bio         String?
  isActive    Boolean  @default(true)
  appointments Appointment[]
  @@map("doctors")
}

model Appointment {
  id       String @id @default(cuid())
  date     DateTime
  time     String
  duration Int  
  status   AppointmentStatus @default(CONFIRMED)
  reason   String?
  userId   String
  doctorId String
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  doctor   Doctor   @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  @@map("appointments")
}

enum AppointmentStatus {
  SCHEDULED
  CONFIRMED
  CANCELED
}


enum Gender{
  MALE
  FEMALE
}